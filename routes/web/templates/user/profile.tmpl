{{ define "user/profile.tmpl"}}
{{ template "global/header.tmpl" .}}

<nav>
  <div class="nav nav-tabs" id="nav-tab" role="tablist">
    {{ if .canChgPass }}
    <button class="nav-link {{ if not .navotp }}active{{ end }}" id="nav-chgpwd-tab" data-bs-toggle="tab" data-bs-target="#nav-chgpwd" type="button" role="tab" aria-controls="nav-chgpwd" aria-selected="true">{{ tr "Change password" }}</button>
    {{ end }}
    <button class="nav-link {{ if not .canChgPass }}active{{end}}" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">{{ tr "Profile" }}</button>
    {{ if .useOtp }}
    <button class="nav-link {{ if .navotp }}active{{ end }}" id="nav-otp-tab" data-bs-toggle="tab" data-bs-target="#nav-otp" type="button" role="tab" aria-controls="nav-otp" aria-selected="false">{{ tr "OTP" }}</button>
    {{ end }}
  </div>
</nav>

<div class="tab-content" id="nav-tabContent">
{{ if .canChgPass }}
<div class="tab-pane fade {{ if not .navotp }}show active{{ end }}" id="nav-chgpwd" role="tabpanel" aria-labelledby="nav-chgpwd-tab">
<form class="w-75 p-3" action="/auth/user/{{ .u.UIDNumber }}" method="POST">
<input type="hidden" name="_csrf" value="{{ .Csrf }}">
<input type="hidden" name="_method" value="PUT">
  <div class="row mb-3">
    <label for="inputPassword" class="col-sm-2 col-form-label">{{ tr "New password" }}</label>
    <div class="col-sm-6">
      <input type="password" class="form-control {{ with .u.Errors.Password }}is-invalid{{ end }}" id="inputPassword" name="inputPassword">
      {{ with .u.Errors.Password }}
       <div class="invalid-feedback">{{ . }}</div>
      {{ end }}
    </div>
  </div>
  <div class="row mb-3">
    <label for="inputPassword2" class="col-sm-2 col-form-label">{{ tr "Confirm password" }}</label>
    <div class="col-sm-6">
      <input type="password" class="form-control {{ with .u.Errors.Password2 }}is-invalid{{ end }}" id="inputPassword2" name="inputPassword2">
      {{ with .u.Errors.Password2 }}
       <div class="invalid-feedback">{{ . }}</div>
      {{ end }}
    </div>
  </div>
  <div class="container-fluid">
   <div class="d-flex justify-content-between">
    <button type="submit" class="btn btn-primary" {{ if .lock }}disabled{{ end }}>{{ tr "Change password" }}</button>
   </div>
  </div> 
</form>
</div>
{{ end }}

<div class="tab-pane fade {{ if not .canChgPass }}show active{{ end }}" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
<form class="w-75 p-3">
  <div class="row mb-3">
    <label for="inputGroup" class="col-sm-2 col-form-label">{{ tr "Group" }}</label>
    <div class="col-sm-6">
      <input type="text" class="form-control-plaintext" name="inputGroup" id="inputGroup"
	value ="{{ range .groupdata }}{{if eq $.u.PrimaryGroup .GIDNumber}}{{.Name}}{{end}}{{end}}"
       readonly>
    </div>
  </div>
  <div class="row mb-3">
    <label for="inputOtherGroup" class="col-sm-2 col-form-label">{{ tr "Others" }}</label>
    <div class="col-sm-6">
      <select class="form-select" multiple="" name="inputOtherGroup" id="inputOtherGroup" aria-label="multiple select other groups" readonly>
	{{ range .groupdata }}
         {{ with $t := .GIDNumber }}
	  {{ range $k,$v := $.u.OtherGroups }}
	    {{ if eq $v $t }}<option selected>{{with index $.groupdata $k }}{{.Name}}{{end}}</option>{{end}}
          {{end}}
         {{end}}
	{{end}}
      </select>
    </div>
  </div>
  <div class="row mb-3">
    <label for="inputSN" class="col-sm-2 col-form-label">{{ tr "Name" }}</label>
    <div class="col-sm-6">
      <input type="text" class="form-control-plaintext" name="inputSN" id="inputSN" value="{{ .u.SN }}" readonly>
    </div>
  </div>
  <div class="row mb-3">
    <label for="inputGivenName" class="col-sm-2 col-form-label">{{ tr "Surname" }}</label>
    <div class="col-sm-6">
      <input type="text" class="form-control-plaintext" name="inputGivenName" id="inputGivenName" value="{{ .u.GivenName }}" readonly>
    </div>
  </div>
  <div class="row mb-3">
    <label for="inputMail" class="col-sm-2 col-form-label">{{ tr "Mail" }}</label>
    <div class="col-sm-6">
      <input type="text" class="form-control-plaintext" name="inputMail" id="inputMail" value="{{ .u.Mail }}" readonly>
    </div>
  </div>
  <div class="row mb-3">
    <label for="inputDisabled" class="col-sm-2 col-form-label">{{ tr "Disabled" }}</label>
    <div class="col-sm-6">
      <input type="checkbox" class="check-input" name="inputDisabled" id="inputDisabled" {{if .u.Disabled }}checked{{end}} disabled readonly>
    </div>
  </div>
</form>
</div>

{{ if .useOtp }}
<div class="tab-pane fade {{ if .navotp }}show active{{ end }}" id="nav-otp" role="tabpanel" aria-labelledby="nav-otp-tab">
<form class="w-75 p-3" action="/auth/user/otp/{{ .u.UIDNumber }}" method="POST">
<input type="hidden" name="_csrf" value="{{ .Csrf }}">
<input type="hidden" name="_method" value="PUT">
  <div class="row mb-6">
    <div class="col-sm-6">
     {{ if .u.OTPSecret }}
	<p>
	  <img src="data:image/png;base64,{{.u.OTPImg}}" alt="QR Code" />
	  <p><strong>{{ .appname }}</strong> - {{.u.Name}}</p>
	</p>
      {{ end }}
     </div>
  </div>
  <div class="row mb-3">
    <div class="col-sm-3">
      <input type="password" class="form-control {{ with .u.Errors.OTPSecret }}is-invalid{{ end }}" id="inputOTPSecret" name="inputOTPSecret" value="{{ .u.OTPSecret }}">
      {{ with .u.Errors.OTPSecret }}
       <div class="invalid-feedback">{{ . }}</div>
      {{ end }}
    </div>
    <div class="col-lg-4">
      <button type="button" id="submit" class="btn btn-warning"
        onClick="(function(){
           $('#inputOTPSecret').val( random_gen(24) );
           $('#otpShow').addClass('disabled').prop('disabled', true);
           return true; })();return false;">{{ tr "Create secret" }}</button>
    </div>
  </div>
  <button type="submit" class="btn btn-primary" {{ if .lock }}disabled{{ end }}>{{ tr "Change Secret" }}</button>
</form>
</div>


<script src="/js/Nibbler.js" crossorigin="anonymous"></script>
<script>
  base32 = new Nibbler({
    dataBits: 8,
    codeBits: 5,
    keyString: 'abcdefghijklmnopqrstuvwxyz234567',
    pad: '='
  });

  function random_gen(length = 16) {
    let random_str = (Math.random()*1e32).toString(36);
    random_str = base32.encode(random_str);

    return random_str.substring(0, length);
  }
</script>
{{end}}


{{ template "global/footer.tmpl" .}}
{{ end }}
